@page "/ProductSearch"
@using dk.via.ftc.web.Data
@using dk.via.ftc.businesslayer.Models
@inject IProductService ProductService;
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager

@attribute [Authorize(Policy = "DispensaryAdmin")]
<h3>Product Search</h3>

@if (todosToShow == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else if (!allTodos.Any())
{
    <p>
        <em>No To Do items exist.</em>
    </p>
}
else
{	<table class="table">
     <thead>
     <tr>
         <th>Product Name</th>
         <th>Strain Name</th>
         <th>Medical Indications</th>
         <th>THC Content</th>
         <th></th>
     </tr>
     </thead>
     <tbody>
     @foreach (ProductStrain item in todosToShow)
     {
         <tr>
             <td>@item.ProductName</td>
             <td>@item.strainname</td>
             <td>@DisplayEffect(@item.effects.medical)</td>
             <td>@item.ThcContent</td>
             <td>

                 <button class = "btn btn-primary"  @onclick=@(() => ViewMore(item))>
                     View More
                 </button>


             </td>

         </tr>
     }
     </tbody>
     </table>
     }
  

@code {

    private IList<ProductStrain> todosToShow;
    private IList<ProductStrain> allTodos;

  


    private string DisplayEffect(List<string> effects)
    {
        int count = effects.Count;
        string str = "";
        foreach (string effect in effects)
        {
            if (count == 1)
            {
                str += effect;
            }
            else
            {
                str += effect + ", ";
            }
            count--;
        }
        return str;
    }

    protected override async Task OnInitializedAsync()
    {
        allTodos = await ProductService.GetProductsAllProductsAsync();
        todosToShow = allTodos;
    }


    private async Task ViewMore(ProductStrain ps)
    {
        NavigationManager.NavigateTo("/Products/" + ps.ProductId);
     
    }

   
}