@page "/Products"
@page "/Products/{id:int}"
@using dk.via.ftc.web.Data
@using dk.via.ftc.businesslayer.Models
@using Microsoft.Extensions.Logging
@inject IProductService ProductService
@inject IJSRuntime JsRuntime
@attribute [Authorize(Policy = "DispensaryAdmin")]
@if (ps != null)

{
    <h3 class="product">@ps.strainname</h3>
    <div class="card">
        <div class="row">
            <div class="col-3">
                <img src="images/strainImg.png" class="img-fluid img-thumbnail" alt="Image of @ps.ProductName" />
            </div>
            <div class="col-9">
                <ul class="orderPageList productListObj" data-role="listview">
                    <li class>
                        <div class="form-group">
                            Race: @ps.race;
                        </div>
                    </li>

                    <li>
                        <div class="form-group">
                            THC: @ps.ThcContent<br />
                        </div>
                    </li>
                    <li>
                        <div class="form-group">
                            Positive Effects: @DisplayEffect(@ps.effects.positive);
                        </div>
                    </li>
                    <li>
                        <div class="form-group">
                            Negative Effects: @DisplayEffect(@ps.effects.negative);
                        </div>
                    </li>
                    <li>
                        <div class="form-group">
                            Indications: @DisplayEffect(@ps.effects.medical);
                        </div>

                    </li>
                </ul>
                <p class="actions">
                    <button class="btn btn-success order-button" type="submit">Add To Order</button>
                </p>
            </div>
        </div>
    </div>
}
else if (loadFailed)
{
    <h1> Sorry, we could not load this product due to an error.</h1>
}
else
{<p>Retrieving product...</p>
}
}

@code {
    IList<ProductStrain> products = new List<ProductStrain>();
    ProductStrain ps { get; set; }
    public bool loadFailed;

    [Parameter]
    public int id { get; set; }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            loadFailed = false;
            products = await ProductService.GetProductsAllProductsAsync();
            foreach (ProductStrain prod in products)
            {
                if (prod.ProductId == id)
                {
                    ps = prod;
                }
            }
        }
        catch (Exception ex)
        {
            loadFailed = true;

        }
    }

    private string DisplayEffect(List<string> effects)
    {
        int count = effects.Count;
        string str = "";
        foreach (string effect in effects)
        {
            if (count == 1)
            {
                str += effect;
            }
            else
            {
                str += effect + ", ";
            }
            count--;
        }
        return str;
    }

}